version: '3'

env:
  GHCR_USER: '{{.GHCR_USER | default "ericslandry"}}'
  GHCR_TOKEN: "{{.GHCR_TOKEN}}"

vars:
  APPNAME: myapiserver
  VERSION:
    sh: git describe --tags --always --dirty="-dev"
  VERSION_SHORT:
    sh: git describe --tags --always --dirty="-dev" --abbrev=0
  IMGNAME: "ghcr.io/{{.GHCR_USER}}/{{.APPNAME}}"
  IMGLONG: "{{.IMGNAME}}:{{.VERSION}}"
  IMGSHORT: "{{.IMGNAME}}:{{.VERSION_SHORT}}"
  IMGLATEST: "{{.IMGNAME}}:latest"

tasks:
  clean:
    cmds:
      - rm -rf bin
      - docker image prune -af

  build:
    cmds:
      - task: clean
      - go generate ./api/api.go
      - go build -ldflags "-w -X main.version={{.VERSION}}" -o bin/{{.APPNAME}} ./cmd/{{.APPNAME}}

  docker-build:
    cmds:
      - task: build
      - |
        if [ -z "$GHCR_USER" ]; then
          echo "GHCR_USER is not set"
          exit 1
        fi
      - docker buildx build . --build-arg APPNAME={{.APPNAME}} -t {{.IMGLONG}} -t {{.IMGSHORT}} -t {{.IMGLATEST}}

  docker-push:
    cmds:
      - task: docker-build
      - |
        if [ -z "$GHCR_TOKEN" ]; then
          echo "GHCR_TOKEN is not set"
          exit 1
        fi
      - docker login ghcr.io -u {{.GHCR_USER}} --password-stdin <<< "$GHCR_TOKEN"
      - docker push --all-tags {{.IMGNAME}}

  test:
    cmds:
      - go test -v ./...

  run:
    cmds:
      - go run ./cmd/{{.APPNAME}}

  kill:
    cmds:
      - pkill {{.APPNAME}}

  default:
    desc: "Build and Test"
    cmds:
      - task: build
      - task: test
