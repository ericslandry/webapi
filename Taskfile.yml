version: '3'

dotenv: ['.env']

vars:
  APPNAME: myapiserver
  VERSION:
    sh: git describe --tags --always --dirty="-dev"
  VERSION_SHORT:
    sh: git describe --tags --always --dirty="-dev" --abbrev=0
  IMGNAME: "ghcr.io/{{.GHCR_USER}}/{{.APPNAME}}"
  IMGLONG: "{{.IMGNAME}}:{{.VERSION}}"
  IMGSHORT: "{{.IMGNAME}}:{{.VERSION_SHORT}}"
  IMGLATEST: "{{.IMGNAME}}:latest"

tasks:
  clean:
    cmds:
      - rm -rf bin
      - docker kill $(docker ps --quiet) || true
      - docker container prune -f

  build:
    cmds:
      - task: clean
      - go generate ./api/api.go
      - go build -ldflags "-w -X main.version={{.VERSION}}" -o bin/{{.APPNAME}} ./cmd/{{.APPNAME}}
      - go test -v ./...

  docker-build:
    cmds:
      - task: build
      - |
        if [ -z "$GHCR_USER" ]; then
          echo "GHCR_USER is not set"
          exit 1
        fi
      - docker buildx build . --build-arg APPNAME={{.APPNAME}} -t {{.IMGLONG}} -t {{.IMGSHORT}} -t {{.IMGLATEST}}

  docker-ghcr-login:
    # https://github.com/go-task/task/issues/1038
    env:
      GHCR_USER: "{{.GHCR_USER}}"
      GHCR_TOKEN: "{{.GHCR_TOKEN}}"
    cmds:
      - |
        if [ -z "$GHCR_TOKEN" ]; then
          echo "GHCR_TOKEN is not set"
          exit 1
        fi
      - docker login ghcr.io -u {{.GHCR_USER}} --password-stdin <<< "$GHCR_TOKEN"

  docker-push:
    cmds:
      - task: docker-build
      - task: docker-ghcr-login
      - docker push --all-tags {{.IMGNAME}}

  docker-plow:
    cmds:
      - task: docker-build
      - docker run -d -p 8080:8080 {{.IMGLONG}}
      - task: docker-ghcr-login
      - docker run --rm --net=host ghcr.io/six-ddc/plow http://localhost:8080/hello -c 20

  lint: # WIP
    cmds:
      - task: docker-ghcr-login
      - docker run -e LOG_LEVEL=DEBUG -e RUN_LOCAL=true -v .:/tmp/lint ghcr.io/super-linter/super-linter:latest

  default:
    cmds:
      - task: docker-plow
