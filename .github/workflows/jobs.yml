name: Publish Docker image to container registry

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-push:
    name: Build and push docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      pull-requests: write
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    #- name: Set up QEMU
    #  uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    #- name: Login to DockerHub
    #  uses: docker/login-action@v3
    #  with:
    #    username: ${{ secrets.DHCR_USER }}
    #    password: ${{ secrets.DHCR_TOKEN }}

    #- name: Login to GitHub Container Registry
    #  uses: docker/login-action@v3
    #  with:
    #    registry: ghcr.io
    #    username: ${{ secrets.GHCR_USER }}
    #    password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v5
      with:
        push: false
        load: true # Export to Docker Engine rather than pushing to a registry
        tags: ${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Run Trivy for all CVEs (non-blocking)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.run_id }}
        format: table 
        exit-code: 0

    - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.run_id }}
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'
        format: 'sarif'
        output: 'trivy-results.sarif'
  
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
        #platforms: linux/amd64,linux/arm64,linux/arm/ # makes the build waay too slow
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        build-args: |
          VERSION=${{ steps.docker_meta.outputs.version }}

    # If PR, put image tags in the PR comments
    # from https://github.com/marketplace/actions/create-or-update-comment
    - name: Find comment for image tags
      uses: peter-evans/find-comment@v3
      if: github.event_name == 'pull_request'
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Docker image tag(s) pushed
      
    # If PR, put image tags in the PR comments
    - name: Create or update comment for image tags
      uses: peter-evans/create-or-update-comment@v4
      if: github.event_name == 'pull_request'
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Docker image tag(s) pushed:
          ```text
          ${{ steps.docker_meta.outputs.tags }}
          ```

          Labels added to images:
          ```text
          ${{ steps.docker_meta.outputs.labels }}
          ```
        edit-mode: replace
